# Скомпилированные байт-коды / оптимизированные / DLL файлы
__pycache__/
*.py[cod]
*$py.class

# C-расширения
*.so

# Файлы для дистрибуции / упаковки
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Обычно эти файлы создаются скриптом на Python из шаблона
# перед сборкой exe с помощью PyInstaller для внедрения даты/другой информации.
*.manifest
*.spec

# Логи установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчёты модульного тестирования и покрытия кода
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Переводы
*.mo
*.pot

# Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask:
instance/
.webassets-cache

# Scrapy:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Если это библиотека или пакет, эти файлы могут быть проигнорированы, так как код
# предназначен для работы в разных окружениях; в других случаях можно их добавить.
.python-version

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в контроль версий.
# Однако при совместной разработке, при наличии платформозависимых зависимостей
# или зависимостей без кроссплатформенной поддержки, pipenv может установить
# несоответствующие зависимости или не установить все необходимые.
#Pipfile.lock

# poetry
# Как и Pipfile.lock, обычно рекомендуется включать poetry.lock в контроль версий.
# Это особенно важно для бинарных пакетов для обеспечения воспроизводимости.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Как и Pipfile.lock, рекомендуется включать pdm.lock в контроль версий.
#pdм.lock
# pdm сохраняет настройки проекта в .pdm.toml, но не рекомендуется включать его
# в контроль версий.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; используется в таких проектах, как github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
*.sage.py

# Окружения
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json
auth_data.json

# Pyre — проверка типов
.pyre/

# pytype — статический анализатор типов
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Шаблон для JetBrains находится отдельно по адресу
# https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный .gitignore или объединён с этим файлом.
# Для полного исключения (не рекомендуется) можно раскомментировать строку ниже.
#.idea/
